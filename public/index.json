[{"content":"Mount an SMB share and use iGPU on an unprivileged Debian 12 LXC container in Proxmox Procedure Prere\nCreate an unprivileged Debian 12 LXC container.\nInside the LXC container, use the root user to create a non-root user with your name. In the case of mine I wanted to add it to the sudo and docker groups after installing Docker inside the LXC container.\nuseradd -s /bin/bash -m -G sudo,docker ismael Change the user password to whatever you need.\nsu ismael passwd This user\u0026rsquo;s default UID:GID will be 1000:1000. If not, create it with:\nuseradd ismael -u 1000 -g 1000 -m -s /bin/bash -G sudo,docker Take note of this UID:GID as we\u0026rsquo;ll use it to map the share in Proxmox. The share itself can be on another system. We\u0026rsquo;ll mount it soon. I use an Unraid VM in this same host for this.\nSMB share In the Proxmox host We\u0026rsquo;ll create a user that can be mapped from the host to the LXC container. If we don\u0026rsquo;t do this step, we\u0026rsquo;ll end up with just read access inside the LXC container.\nProxmox maps the users and groups from the host to the LXC containers starting at UID:GID=100000:100000.\nThe created ismael user then:\nInside the LXC container UID: 1000 Inside the host UID: 101000 Create a group on the host with GID=101000 that will own the directory we\u0026rsquo;ll create for the SMB share\ngroupadd -g 101000 ismael Create the same user that we\u0026rsquo;ll use inside the LXC container but with the right UID:GID combination\nuseradd ismael -u 101000 -g 101000 -m -s /bin/bash Make a directory for the share\nmkdir /mnt/media Change said directory\u0026rsquo;s owner to the previously created user\nchown ismael:ismael /mnt/media Modify the /etc/fstab file to mount the SMB share on the directory we created\nnano /etc/fstab Copy this line inside the nano editor for /etc/fstab (note the guest part as my SMB share does not have a password set)\n//192.168.0.10/media /mnt/media cifs guest,rw,uid=1000,gid=1000,file_mode=0777,dir_mode=0777 0 0 If you use a password for your share\n//192.168.0.10/media /mnt/media cifs username=\u0026lt;username\u0026gt;,password=\u0026lt;password\u0026gt;,rw,uid=1000,gid=1000,file_mode=0777,dir_mode=0777 0 0 Reload the changes to /etc/fstab before mounting\nsystemctl daemon-reload mount -a Create a mountpoint in your LXC container pointing to the created share directory\npct set 104 -mp0 /mnt/media,mp=/mnt/user/media Start your LXC container and the share will be mounted in /mnt/user/media and you should be able to write to it!\niGPU Coming soon\u0026hellip;\n","permalink":"https://djismgaming.github.io/posts/proxmox-unprivileged-lxc-smb-and-igpu/","summary":"\u003ch1 id=\"mount-an-smb-share-and-use-igpu-on-an-unprivileged-debian-12-lxc-container-in-proxmox\"\u003eMount an SMB share and use iGPU on an unprivileged Debian 12 LXC container in Proxmox\u003c/h1\u003e\n\u003ch2 id=\"procedure\"\u003eProcedure\u003c/h2\u003e\n\u003cp\u003ePrere\u003c/p\u003e\n\u003cp\u003eCreate an unprivileged Debian 12 LXC container.\u003c/p\u003e\n\u003cp\u003eInside the LXC container, use the \u003ccode\u003eroot\u003c/code\u003e user to create a non-root user with your name. In the case of mine I wanted to add it to the \u003ccode\u003esudo\u003c/code\u003e and \u003ccode\u003edocker\u003c/code\u003e groups after installing Docker inside the LXC container.\u003c/p\u003e\n\u003c!-- more --\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003euseradd -s /bin/bash -m -G sudo,docker ismael\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eChange the user password to whatever you need.\u003c/p\u003e","title":""},{"content":"Proxmox | automatically restore SMB/CIFS share connections If at some point Proxmox loses connectivity with an SMB/CIFS share, it will not restore the connection by itself until a restart of the Proxmox node is performed.\nWith this tip, you’ll make the Proxmox node restore the connection automatically.\n![Alt text](../../images/proxmox-smb-remount.png){ width=\"1000\" }\rIn your node’s shell, create a bash script that looks for mount points in /mnt/pve/ and unmounts them if they become stale:\nnano remount.sh Put this content into the file:\n#!/bin/bash list=$(ls /mnt/pve) for i in $list do status=$(ls /mnt/pve/$i 2\u0026gt;\u0026amp;1) if [[ $status =~ .*Stale.* ]] then umount /mnt/pve/$i fi done Remember to make the script executable by the user creating it:\nchmod 766 /root/remount.sh Add a cron job for this script to run automatically:\n* * * * * /root/remount.sh \u0026gt;/dev/null 2\u0026gt;\u0026amp;1 With that, any SMB/CIFS connections should be restored automatically. That is because the service pvestatd tries to remount every SMB share every 10 seconds.\nThis approach could work for NFS shares too. I have not tested that possibility.\n","permalink":"https://djismgaming.github.io/posts/proxmox-automatically-restore-smb-cifs-share-connections/","summary":"\u003ch1 id=\"proxmox--automatically-restore-smbcifs-share-connections\"\u003eProxmox | automatically restore SMB/CIFS share connections\u003c/h1\u003e\n\u003cp\u003eIf at some point Proxmox loses connectivity with an SMB/CIFS share, it will not restore the connection by itself until a restart of the Proxmox node is performed.\u003c/p\u003e\n\u003cp\u003eWith this tip, you’ll make the Proxmox node restore the connection automatically.\u003c/p\u003e\n\u003cfigure markdown\u003e\r\n  ![Alt text](../../images/proxmox-smb-remount.png){ width=\"1000\" }\r\n  \u003cfigcaption\u003e\u003c/figcaption\u003e\r\n\u003c/figure\u003e\r\n\u003c!-- more --\u003e\r\n\u003cp\u003eIn your node’s shell, create a bash script that looks for mount points in \u003ccode\u003e/mnt/pve/\u003c/code\u003e and unmounts them if they become stale:\u003c/p\u003e","title":""},{"content":"Set up your SSH key-based authentication from Windows in a single line ![Alt text](../../images/linux-filesystem.webp){ width=\"400\" }\rUsing Linux directly to interact with Linux servers is pretty great and seamless. But when your daily driver is Windows, this can be a little more cumbersome.\nFor instance, when connecting with the Windows version of OpenSSH there is a way to copy your generated key for simple password-less logins after that.\nGenerate your private and public keys in your Windows PowerShell shell Execute the command below in Windows Terminal or any other terminal in Windows:\nssh-keygen This one will generate the necessary keys in your local host. These will be located in your Windows profile directory under the .ssh/ sub-directory.\nYou can access it in this location on Windows by using the key combination Win + R and then entering this text in the Run window:\n%userprofile%/.ssh/ ![Windows Run window showing the location to the generated ssh keys](../../images/run-window-profile-ssh-keys.png){ width=\"400\" }\rRun window showing the location to the generated ssh keys\rThat directory will include:\nyour generated private key id_rsa your generated public key id_rsa.pub The public key is the one we\u0026rsquo;ll copy into any remote host we want to connect without using a password.\nNow comes the single line I talked about in the title! Using the command below will make the same process like ssh-copy-id would but working with the OpenSSH in Windows. This will copy your SSH keys into the remote host.\nI use the Windows Terminal for this process. Just edit the line with your data. Specifically change the part user@host.address with your correct remote user and host IP/hostname.\ntype .ssh\\id_rsa.pub | ssh user@host.address \u0026#34;mkdir -p .ssh \u0026amp;\u0026amp; cat \u0026gt;\u0026gt; .ssh/authorized_keys\u0026#34; This makes it possible to login directly to your remote host by simply using:\nssh user@host Hope this one helps someone out there!\n","permalink":"https://djismgaming.github.io/posts/windows-ssh-copy-id/","summary":"\u003ch1 id=\"set-up-your-ssh-key-based-authentication-from-windows-in-a-single-line\"\u003eSet up your SSH key-based authentication from Windows in a single line\u003c/h1\u003e\n\u003cfigure markdown\u003e\r\n  ![Alt text](../../images/linux-filesystem.webp){ width=\"400\" }\r\n  \u003cfigcaption\u003e\u003c/figcaption\u003e\r\n\u003c/figure\u003e\r\n\u003cp\u003eUsing Linux directly to interact with Linux servers is pretty great and seamless. But when your daily driver is Windows, this can be a little more cumbersome.\u003c/p\u003e\n\u003cp\u003eFor instance, when connecting with the Windows version of OpenSSH there is a way to copy your generated key for simple password-less logins after that.\u003c/p\u003e\n\u003c!-- more --\u003e\r\n\u003ch2 id=\"generate-your-private-and-public-keys-in-your-windows-powershell-shell\"\u003eGenerate your private and public keys in your Windows PowerShell shell\u003c/h2\u003e\n\u003cp\u003eExecute the command below in Windows Terminal or any other terminal in Windows:\u003c/p\u003e","title":""},{"content":"iPhone style: Add a period after entering two spaces in Windows 10 ![Alt text](../../images/iphone-period.png){ width=\"400\" }\rToday we type even more than ever during this pandemic. Working from home is a default now.\nThis AutoHotKey script will add a period after you end a sentence by using two spaces. iPhone style period ending on Windows 10!\n;iPhone style period after space\r:*?: ::. ` You need to add this to a *.ahk file (maybe in Documents) after installing AutoHotKey which you can get from https://www.autohotkey.com/\nYou can add all sorts of little helpers here for use in your windows machine. Do a lot of fast and different stuff with just your keyboard!\nHappy typing! ✌\n","permalink":"https://djismgaming.github.io/posts/iphone-style-period-in-windows/","summary":"\u003ch1 id=\"iphone-style-add-a-period-after-entering-two-spaces-in-windows-10\"\u003eiPhone style: Add a period after entering two spaces in Windows 10\u003c/h1\u003e\n\u003cfigure markdown\u003e\r\n  ![Alt text](../../images/iphone-period.png){ width=\"400\" }\r\n  \u003cfigcaption\u003e\u003c/figcaption\u003e\r\n\u003c/figure\u003e\r\n\u003cp\u003eToday we type even more than ever during this pandemic. Working from home is a default now.\u003c/p\u003e\n\u003cp\u003eThis AutoHotKey script will add a period after you end a sentence by using two spaces. iPhone style period ending on Windows 10!\u003c/p\u003e\n\u003c!-- more --\u003e\r\n\u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-ah\" data-lang=\"ah\"\u003e;iPhone style period after space\r\n:*?: ::. `\n\u003c/code\u003e\u003c/pre\u003e\u003cp\u003eYou need to add this to a *.ahk file (maybe in Documents) after installing AutoHotKey which you can get from \u003ca href=\"https://www.autohotkey.com/\"\u003ehttps://www.autohotkey.com/\u003c/a\u003e\u003c/p\u003e","title":""},{"content":"How to use a SpeedTouch modem as a router ![Alt text](../../images/speedtouch.jpg){ width=\"400\" }\rA speedtouch modem, like the one pictured, is a DSL modem. But with a little tweak, it can be used as a router for your network.\nRun these commands towards the SpeedTouch modem using telnet:\ntelnet \u0026lt;modem ip address\u0026gt; Commands to set up a SpeedTouch DSL modem as a router:\nFor firmware versions 5.3 and lower:\nppp relay flush ppp flush eth flush atm flush atm phonebook flush eth bridge ifdelete intf=ethport4 eth ifadd intf=ethport4 eth ifconfig intf=ethport4 dest=ethif4 retry=10 group=default eth ifattach intf=ethport4 ip ifadd intf=WAN_Port dest=ethport4 ip ifconfig intf=WAN_Port hwaddr=00:11:42:0c:65:1d # This line is needed if MAC address cloning is required, otherwise it\u0026#39;s not necessary dhcp client ifadd intf=WAN_Port dhcp client ifattach intf=WAN_Port nat ifconfig intf=WAN_Port translation=enabled nat ifattach intf=WAN_Port saveall For firmware versions 6.1 and higher:\nppp relay flush ppp flush eth flush atm flush atm phonebook flush eth bridge ifdelete intf=ethport4 eth ifadd intf=eth_wan eth ifconfig intf=eth_wan dest=ethif4 eth ifattach intf=eth_wan ip ifadd intf=ip_wan_eth dest=eth_wan ip ifconfig intf=ip_wan_eth status=up ip ifconfig intf=ip_wan_eth hwaddr=00:11:42:0c:65:1d # This line is needed if MAC address cloning is required, otherwise it\u0026#39;s not necessary ip ifattach intf=ip_wan_eth nat ifconfig intf=ip_wan_eth translation=enabled dhcp client ifadd intf=ip_wan_eth dhcp client ifconfig intf=ip_wan_eth metric=5 dnsmetric=5 dhcp client rqoptions and intf=ip_wan_eth option=dhcp-lease-time dhcp client rqoptions and intf=ip_wan_eth option=dhcp-renewal-time dhcp client rqoptions and intf=ip_wan_eth option=dhcp-rebinding-time dhcp client rqoptions and intf=ip_wan_eth option=subnet-mask dhcp client rqoptions and intf=ip_wan_eth option=classless-static-routes dhcp client rqoptions and intf=ip_wan_eth option=default-routers dhcp client rqoptions and intf=ip_wan_eth option=classfull-static-routes dhcp client rqoptions and intf=ip_wan_eth option=domain-name-servers dhcp client ifattach intf=ip_wan_eth saveall ","permalink":"https://djismgaming.github.io/posts/speedtouch-modem-as-a-router/","summary":"\u003ch1 id=\"how-to-use-a-speedtouch-modem-as-a-router\"\u003eHow to use a SpeedTouch modem as a router\u003c/h1\u003e\n\u003cfigure markdown\u003e\r\n  ![Alt text](../../images/speedtouch.jpg){ width=\"400\" }\r\n  \u003cfigcaption\u003e\u003c/figcaption\u003e\r\n\u003c/figure\u003e\r\n\u003cp\u003eA speedtouch modem, like the one pictured, is a DSL modem. But with a little tweak, it can be used as a router for your network.\u003c/p\u003e\n\u003c!-- more --\u003e\r\n\u003cp\u003eRun these commands towards the SpeedTouch modem using \u003ccode\u003etelnet\u003c/code\u003e:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003etelnet \u0026lt;modem ip address\u0026gt;\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eCommands to set up a SpeedTouch DSL modem as a router:\u003c/p\u003e\n\u003cp\u003eFor firmware versions 5.3 and lower:\u003c/p\u003e","title":""},{"content":"SSH Tunneling for easy access to web-based apps form servers ![Alt text](../../images/ssh-tunnel.jpg){ width=\"400\" }\rI had to access Portainer in my cloud VM to modify docker containers. I can access it now via any web browser with SSL (https) no problem, but this way is good in a pinch \u0026#x1f609;\nRun this command in your local machine:\nssh -L 9000:127.0.0.1:9000 my_user@my-remote-server This will forward port 9000 to our local machine:\nhttp://localhost:9000 or http://127.0.0.1:9000\nAt this local address the Portainer web UI from the remote server will appear.\nNice and neat little SSH trick! \u0026#x1f609;\n","permalink":"https://djismgaming.github.io/posts/ssh-tunneling-for-easy-access-to-web-based-apps-form-servers/","summary":"\u003ch1 id=\"ssh-tunneling-for-easy-access-to-web-based-apps-form-servers\"\u003eSSH Tunneling for easy access to web-based apps form servers\u003c/h1\u003e\n\u003cfigure markdown\u003e\r\n  ![Alt text](../../images/ssh-tunnel.jpg){ width=\"400\" }\r\n  \u003cfigcaption\u003e\u003c/figcaption\u003e\r\n\u003c/figure\u003e\r\n\u003cp\u003eI had to access Portainer in my cloud VM to modify docker containers. I can access it now via any web browser with SSL (https) no problem, but this way is good in a pinch \u0026#x1f609;\u003c/p\u003e\n\u003c!-- more --\u003e\r\n\u003cp\u003eRun this command in your local machine:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003essh -L 9000:127.0.0.1:9000 my_user@my-remote-server\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003eThis will forward port 9000 to our local machine:\u003c/p\u003e","title":""},{"content":"This is a start I started this little site to document little snippets I use regularly so I don\u0026rsquo;t loose them. I figured it would be a good thing to share them with the world!\nThese will include mainly Linux-related topics but ultimately anything tech-related will be included.\nI chose mkdocs since it uses Markdown files as the source. I\u0026rsquo;m very familiar with Markdown and regularly use it to create very organized and usable note files in between code.\n","permalink":"https://djismgaming.github.io/posts/journey-start/","summary":"\u003ch1 id=\"this-is-a-start\"\u003eThis is a start\u003c/h1\u003e\n\u003cp\u003eI started this little site to document little snippets I use regularly so I don\u0026rsquo;t loose them. I figured it would be a good thing to share them with the world!\u003c/p\u003e\n\u003c!-- more --\u003e\r\n\u003cp\u003eThese will include mainly Linux-related topics but ultimately anything tech-related will be included.\u003c/p\u003e\n\u003cp\u003eI chose \u003ccode\u003emkdocs\u003c/code\u003e since it uses Markdown files as the source. I\u0026rsquo;m very familiar with Markdown and regularly use it to create very organized and usable note files in between code.\u003c/p\u003e","title":""},{"content":"Hello world This is the default first post for mkdocs. \u0026#x1f609;\nIt was good to start with something familiar!\n","permalink":"https://djismgaming.github.io/posts/hello-world/","summary":"\u003ch1 id=\"hello-world\"\u003eHello world\u003c/h1\u003e\n\u003cp\u003eThis is the default\u003c!-- more --\u003e first post for \u003ccode\u003emkdocs\u003c/code\u003e. \u0026#x1f609;\u003c/p\u003e\n\u003cp\u003eIt was good to start with something familiar!\u003c/p\u003e","title":""}]